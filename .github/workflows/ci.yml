name: CI Pipeline

on:
  push:
    branches: [PostgreSQLbranch]
  pull_request:
    branches: [PostgreSQLbranch]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mysecurepassword
          POSTGRES_DB: flightbooking
        options: >-
          --health-cmd="pg_isready -U myuser -d flightbooking" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js for backend
      - name: Set up Node.js backend
        uses: actions/setup-node@v3
        with:
          node-version: 20
        working-directory: ./flight-booking-backend

      # Step 3: Install backend dependencies
      - name: Install backend dependencies
        run: npm install
        working-directory: ./flight-booking-backend

      # Step 4: Set up Node.js for frontend
      - name: Set up Node.js frontend
        uses: actions/setup-node@v3
        with:
          node-version: 20
        working-directory: ./flight-booking-frontend

      # Step 5: Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./flight-booking-frontend

      # Step 6: Build Docker containers using Docker Compose
      - name: Build and start Docker containers
        run: docker-compose up --build -d
        working-directory: ./flight-booking-backend

      # Step 7: Wait for backend to be ready
      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if nc -z localhost 3001; then
              echo "Backend is up!";
              break;
            fi
            echo "Waiting for backend to be ready...";
            sleep 5;
          done

      # Step 8: Run Cypress tests
      - name: Run Cypress tests
        working-directory: ./flight-booking-frontend
        run: npx cypress run

      # Step 9: Shut down Docker containers
      - name: Shut down Docker containers
        run: docker-compose down
        working-directory: ./flight-booking-backend
